{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introdu\u00e7\u00e3o","text":"<p>A ideia desta documenta\u00e7\u00e3o \u00e9 para servir como apoio inicial ao desenvolvimentos de aplica\u00e7\u00f5es para web utilizando Lazarus+FreePascal+Pas2JS. Servir\u00e1 como um guia de consulta para eu utilizar (e quem mais desejar).</p> <p>O Lazarus \u00e9 um excelente editor para aplicativos que utilizam o FreePascal, possuindo diversas facilidades no momento de escrita e execu\u00e7\u00e3o do c\u00f3digo.</p> <p>O Pascal \u00e9 uma linguagem capaz (o SO do Lisa, primeiro computador com interface gr\u00e1fica foi escrito em Pascal, pelo menos as primeiras vers\u00f5es do Photoshop foram escritas em Pascal entre outros casos). Outro aspecto \u00e9 a compatibilidade da linguagem. \u00c9 poss\u00edvel pegar programas da d\u00e9cada de 90 no SWAG escritas em Pascal e compilar atualmente que eles ir\u00e3o funcionar (\u00e9 claro que se tiver algo relacionado com hardware exite uma grande possibilidade de que n\u00e3o aconte\u00e7a).</p> <p>O Pas2JS ir\u00e1 pegar o c\u00f3digo em Pascal e converter para JavaScript. \u00c9 claro que algumas facilidade ser\u00e3o perdidas (ponteiro e outras caracter\u00edsticas que lidam com mem\u00f3ria, por exemplo). Em Pas2js \u00e9 poss\u00edvel as diferen\u00e7as existentes na transforma\u00e7\u00e3o.</p> <p>\u00c9 bom ter um certo conhecimento em programa\u00e7\u00e3o para a utiliza\u00e7\u00e3o da documenta\u00e7\u00e3o.</p> <p>Espero que seja \u00fatil.</p>"},{"location":"about/","title":"Piscibus iubet","text":""},{"location":"about/#per-contentusque-memori-ethemon-actum-gratissima-umeroque","title":"Per contentusque memori Ethemon actum gratissima umeroque","text":"<p>Lorem markdownum annum praeside, ima terram dignus ritus quos cogit tamen mecum mactatae nataque ferat neve. Nervis orbem formam tenues constat arbor Eurynomus vix fulminis ingens gemitumque orsa vigore temptanda nam dedecus arvis. Cerbere tanta, senili aut die dolens terrent Procris eris: dura cortinaque pectora tecta vel Iovis male.</p> <p>Draconis amans et facies nocte deae ira; facit exire concreta, de nescia Ultima. Modestos tulerit ego fulvo aula iussa Nesso sine, duo quid credis munus: fit.</p>"},{"location":"about/#ab-non","title":"Ab non","text":"<p>Dextra amplectitur putat violentior admoto caput verba Pleionesque alios emisit, tuae sucos digiti Pergama Hesperium eligit quoque fecit. Vidit utroque nec revocare fama, dum praedam comes rigidis. Sororis Aeacides lucem, et laesum obside crimen conviciaque forma breviore, at maxima haliaeetus? Trepidare in pondera arcus respiciens fassusque sparsosque sed puppis fas vecta, nec interea?</p> <ul> <li>Illa anima fuit lati postquam timentem</li> <li>Sibi non digitos oris ferarum clavam</li> <li>Animalia amnis</li> <li>Nondum quem omnia semiferos coegit</li> </ul>"},{"location":"about/#steriles-etruscam-tu-meliore-achillem","title":"Steriles Etruscam tu meliore Achillem","text":"<p>Est passim stantem, agrisque, frustra vecti laudavit patris, magnanimus erat capere. Omnis quantum sua Idmon: est veneni, nam sua is circuiere. Libys iuventae: innumeris hostem, ignes referri et artus. Sed gerunt semper submoverat flamine cur umbrae saxum te possent moenia via secretaque ut tritis pallida nomine terras, prosiliunt. Inquit Hippomenen carissime tela caede reicere?</p> <ol> <li>O est</li> <li>Inmunitamque est guttura ad Dianae</li> <li>Cum venenis canis esse hora</li> </ol> <p>Nimia iusta ut sagitta Eridanus, veteris onerosus sit viros coepi una Caencu, quis et pascua sensit; huc. Ullos sinus et Albanos perveniunt pericula corpusque umeris maritae: et.</p>"},{"location":"ac/","title":"Antes de Come\u00e7ar","text":"<p>\u00c9 necess\u00e1rio que voc\u00ea tenha um pouco de conhecimento de diversas tecnologias:</p>"},{"location":"ac/#pascal","title":"Pascal","text":"<p>Como voc\u00ea ir\u00e1 escrever os programas em Pascal \u00e9 o b\u00e1sico. Mas se voc\u00ea n\u00e3o tiver, durante os exemplos voc\u00ea vai adquirindo algum conhecimento, depois, fica mais f\u00e1cil. A\u00ed \u00e9 s\u00f3 pegar um manual que voc\u00ea j\u00e1 sabe a metade.</p>"},{"location":"ac/#html","title":"HTML","text":"<p>Alguma coisa todo mundo conhece. Eu sei uns 10%, mais a capacidade de procurar/copiar/colar e aumenta para uns 45%. \u00c9 o suficiente. Se precisar de algo \u00e9 s\u00f3 contratar um profissional. O mais importante \u00e9 que voc\u00ea ir\u00e1 definir um id para os elementos que deseja interagir e o resto \u00e9 deixar para o programa fazer.</p>"},{"location":"ac/#css","title":"CSS","text":"<p>Aqui a coisa fica preta. Sei que existe, mais procurar copiar e colar e acho que estou nos 20%. Mas geralmente se utiliza um framework e a\u00ed o meu conhecimento j\u00e1 sobe para 30%. Alguns que voc\u00ea pode utilizar:</p> <ul> <li>BULMA : praticamente n\u00e3o usa JS.</li> <li>Bootstrap : conhecido mas grand\u00e3o. </li> <li>W3CSS : relativamente   pequeno e tamb\u00e9m quase n\u00e3o usa JS. Este site   tamb\u00e9m serve de   refer\u00eancia para diversas tecnologias como HTML, CSS, JS, etc.</li> <li>SPECTRE \u00e9 relativamente   pequeno e tem umas coisas interessantes.</li> </ul> <p>Procurando na internet, voc\u00ea ir\u00e1 encontrar diversos. Alguns mais   minimalistas, outros gigantes, uns mais f\u00e1ceis e outros mais   dif\u00edceis (pelo menos para mim).</p>"},{"location":"ac/#javascript","title":"JavaScript","text":"<p>Como voc\u00ea vai usar Pascal, JS ser\u00e1 sup\u00e9rfluo. Mas sempre \u00e9 bom conhecer um pouquinho pois ir\u00e1 associar algumas fun\u00e7\u00f5es.</p>"},{"location":"install/","title":"Instala\u00e7\u00e3o","text":"<p>Caso voc\u00ea j\u00e1 possua o Lazarus instalado, pode seguir as op\u00e7\u00f5es existentes na p\u00e1gina pas2js e pular para a pr\u00f3xima p\u00e1gina. Pessoalmente, acho mais f\u00e1cil utilizar o fpcupdeluxe que bastam alguns cliques para que as coisas funcionem.</p>"},{"location":"install/#fpcupdeluxe","title":"fpcupdeluxe","text":""},{"location":"install/#tldr","title":"TL;DR;","text":"<p>Crie um diret\u00f3rio, baixe o fpcupdeluxe, execute, clique no bot\u00e3o WA e aguarde o final da instala\u00e7\u00e3o.</p> <p></p> <p>Com o fpcupdeluxe \u00e9 poss\u00edvel instalar o Lazarus e outras diversas op\u00e7\u00f5es de forma simples. Caso voc\u00ea ainda n\u00e3o tenha o Lazarus instalado \u00e9 interessante ler os requisitos necess\u00e1rios para que a instala\u00e7\u00e3o seja bem sucedida. Siga os seguintes passos:</p> <ol> <li>Crie um diret\u00f3rio (e.g. PasWASM)</li> <li>Baixe a \u00faltima vers\u00e3o do fpcupdeluxe e coloque no diret\u00f3rio criado. S\u00f3 tome cuidado para baixar a vers\u00e3o para o seu SO.</li> <li>D\u00ea permiss\u00f5es de execu\u00e7\u00e3o se for o caso (<code>chmod +x fpcupdeluxe</code>)</li> <li>Execute o programa <code>./fpcupdeluxe</code></li> <li>Escolha o bot\u00e3o inferior WA</li> <li>O programa ir\u00e1 criar os diret\u00f3rios, baixar e compilar o programas    necess\u00e1rios.</li> <li>Feche o programa e renomeie o \u00edcone criado no desktop    (e.g. PasWASM). </li> </ol>"},{"location":"install/#janela-unica","title":"Janela \u00fanica","text":"<p>Como padr\u00e3o, o Lazarus \u00e9 instalado com as janelas todas soltas. </p> <p></p> <p>N\u00e3o \u00e9 t\u00e3o ruim de trabalhar mas eu prefiro a IDE em uma \u00fanica janela. Acho que o Lazarus deveria vir no modo janela \u00fanica ou, pelo menos, ter uma op\u00e7\u00e3o no menu Windows para facilitar o processo assim como no GIMP. Como eu n\u00e3o gosto daquele monte de janelas espalhadas pelo monitor, a primeira coisa que eu fa\u00e7o \u00e9 instalar os pacotes necess\u00e1rios para que fique em uma janela. </p> <p>Acesse a op\u00e7\u00e3o Install/Uninstall Packages ... do menu Packages </p> <p>Selecione os pacotes anchordockingdsgn 1.0 e dockedformeditor 0.0 e clique em Install Selection. </p> <p>Clique no bot\u00e3o Save and rebuild IDE </p> <p>Na pr\u00f3xima janela, clique em Continue </p> <p>Em pouco tempo voc\u00ea ter\u00e1 uma nova IDE. Eu acho melhor de trabalhar. </p> <p>Agora \u00e9 s\u00f3 deixar a IDE do seu gosto. Alguns exemplos de como configurar a apar\u00eancia da IDE podem ser encontradas aqui. Se voc\u00ea \u00e9 iniciante, pule a parte onde tem New StudioPlus Desktops.</p> <p>Atualmente estou usando a fonte JetBrains Mono. \u00c9 free e open source.</p> <p>Tamb\u00e9m acho que os temas fornecidos com a distribui\u00e7\u00e3o deixam um pouco a desejar. Alguns temas que voc\u00ea pode instalar. Baixe os temas desejados (arquivo .xml) e copie para <code>~/PasWASM/fpcupdeluxe/config_lazarus/userschemes</code> (provavelmente dever\u00e1 criar o diret\u00f3rio userschemes). Para utilizar os novos temas voc\u00ea dever\u00e1 reinicializar o Lazarus.</p> <p>Era isso. O ambiente j\u00e1 est\u00e1 pronto para ser utilizado. </p>"},{"location":"wba-15/","title":"15 Puzzle","text":"<p>O objetivo aqui foi criar uma aplica\u00e7\u00e3o para desktop e tentar recri\u00e1-la para web, vendo o que seria poss\u00edvel reaproveitar. Poderia ter reaproveitado mais coisas mas, \u00e9 s\u00f3 um exemplo.</p> <p>Escolhi um quebra cabe\u00e7as que fosse simples de implementar. Optei pelo 15 Puzzle (ou jogo do 15).</p> <p>A vers\u00e3o para desktop ficou assim:</p> <p></p> <p>e a vers\u00e3o para web ficou assim:</p> <p></p> <p>Acho que ficou semelhante o suficiente para um teste.</p> <p>TL;DR;</p> <p>Fonte do projeto no github.</p>"},{"location":"wba-15/#html","title":"HTML","text":"<pre><code>&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\"&gt;\n  &lt;title&gt;Project1&lt;/title&gt;\n  &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n  &lt;link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"&gt;\n  &lt;script src=\"quinze_web.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;div class=\"w3-container w3-padding-16\"&gt;\n  &lt;div class=\"w3-row\"&gt;\n    &lt;div class=\"w3-col s6 w3-center\"&gt;&lt;canvas id=\"my_canvas\"&gt;&lt;/canvas&gt;&lt;/div&gt;\n      &lt;div class=\"w3-col s6 w3-center\"&gt;\n        &lt;header class=\"w3-container w3-black w3-center\"&gt;\n          &lt;h1 class=\"w3-xxxlarge\"&gt;15 Puzzle&lt;/h1&gt;\n        &lt;/header&gt;\n        &lt;div class=\"w3-padding-16\"&gt;\n          &lt;button id=\"bt_new\" class=\"w3-block w3-button w3-white w3-border w3-border-black w3-hover-green\"&gt;New Game&lt;/button&gt;\n        &lt;/div&gt;\n        &lt;p&gt;Move tiles in grid to order them from 1 to 15. Use arrows to move&lt;/p&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n  &lt;script&gt;\nwindow.addEventListener(\"load\", rtl.run);\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>N\u00e3o tem muito mist\u00e9rio. Basicamente um canvas na linha 13 para o desenho do tabuleiro e um bot\u00e3o na linha 19 para novo jogo.</p>"},{"location":"wba-15/#desktop-vs-navegador","title":"Desktop vs Navegador","text":"<p>Basicamente \u00e9 necess\u00e1rio separar o desenho da janela, do tabuleiro e alguns detalhes referente ao movimento conforme as teclas pressionadas. A l\u00f3gica principal do jogo foi reutilizada. Por falta de um nome melhor, coloquei no arquivo <code>fifteenengine.pas</code>. Para trabalhar com as diferen\u00e7as entre desktop e navegador na hora da compila\u00e7\u00e3o, basta um <code>{$IFDEF/IFNNDEF BROWSER}</code>. </p>"},{"location":"wba-15/#programa-comum","title":"Programa comum","text":""},{"location":"wba-15/#fifteenenginepas","title":"fifteenengine.pas","text":"<pre><code>unit fifteenengine;\n\n{$mode ObjFPC}{$H+}\n\ninterface\n\nuses\nClasses, SysUtils, Math\n{$IFNDEF BROWSER}\n,LCLType\n{$ENDIF}\n;\n\nConst\nCSIZE = 15;\nBSIZE = 100;\nGAP = 4;\n{$IFDEF BROWSER}\nVK_UP    = 100;\nVK_DOWN  = 101;\nVK_RIGHT = 102;\nVK_LEFT  = 103;\nCOLORBLANK = '#808080';\nCOLOROK    = '#b3ffb3';\nCOLORWRONG = '#ff9999';\n{$ELSE}\nCOLORBLANK = $00808080;\nCOLOROK    = $00b3ffb3;\nCOLORWRONG = $009999ff;\n{$ENDIF}\n\ntype Block = Record\nn,\nx,\ny : integer;\nend;\n\nvar\nBoard : array [0..CSIZE] of Block;\nBlank : integer;\n\nProcedure BoardInit;\nprocedure Shuffle;\nFunction  DoMove(key:word):Boolean;\n\nimplementation\n\nprocedure SetBlank;\nvar\ni: Integer;\nbegin\nfor i:=0 to CSIZE do\nif Board[i].n = 0 then begin\nBlank:=i;\nBreak;\nend;\nend;\n\nProcedure BoardInit;\nvar\npx,py,\npb: Integer;\nbegin\n{$IFNDEF BROWSER}\nRandomize;\n{$ENDIF}\nfor pb:=0 to CSIZE do begin\nDivMod(pb,4,py,px);\nwith Board[pb] do begin\nn:=pb+1;\nx:=px;\ny:=py;\nend;\nend;\nBoard[CSIZE].n:=0;\nBlank:=CSIZE;\nend;\n\nFunction IsSolvable:Boolean;\nvar\ni,j : integer;\np,c : integer;\nbegin\nc:=0;\np:=4-Board[Blank].y;\nfor i:=0 to CSIZE - 1 do\nfor j:=i to CSIZE -1 do\nif (Board[i].n &gt; 0) and (Board[j].n &gt; 0) then\nif Board[i].n &gt; Board[j].n then\ninc(c);\nResult:=odd(c) xor odd(p);\nend;\n\nprocedure Shuffle;\nvar\ni,j,n: Integer;\nbegin\nfor i := CSIZE downto 0 do begin\nj := Random(i);\nif not (i = j) then begin\nn := Board[i].n;\nBoard[i].n := Board[j].n;\nBoard[j].n := n;\nend;\nend;\nSetBlank;\nif not IsSolvable then\nShuffle;\nend;\n\nFunction  CanMove(key:word):Boolean;\nbegin\nResult:=False;\ncase key of\nVK_UP    : if Board[Blank].y = 3 then exit;\nVK_DOWN  : if Board[Blank].y = 0 then exit;\nVK_RIGHT : if Board[Blank].x = 0 then exit;\nVK_LEFT  : if Board[Blank].x = 3 then exit;\nend;\nResult:=True;\nend;\n\nFunction DoMove(Key:word):Boolean;\nvar\nd:integer;\nbegin\nResult:=CanMove(key);\nif not Result then\nexit;\ncase Key of\nVK_UP    : d :=  4;\nVK_DOWN  : d := -4;\nVK_RIGHT : d := -1;\nVK_LEFT  : d :=  1;\nend;\nBoard[Blank].n := Board[Blank+d].n;\nBlank:=Blank+d;\nBoard[Blank].n:=0;\nend;\n\nend.\n</code></pre> <p>Nas linhas de 19 a 25, definem as teclas com os mesmos nomes (valores quaisquer pois n\u00e3o fui procurar) da definidas em <code>LCLType</code>que n\u00e3o pode ser inclu\u00edda e as cores desejadas para pe\u00e7as no local correto, errado e branco que serve para a movimenta\u00e7\u00e3o. </p> <p>De 32 a 36 um record que indica o n\u00famero e as coordenadas. Poderia ser um <code>TPoint</code> mas fica assim.</p> <p>A linha 39 \u00e9 o tabuleiro. Algumas vers\u00f5es utilizam matrizes bidimensionais. Resolvi usar uma lista pois achei mais pr\u00e1ticas algumas opera\u00e7\u00f5es. E as pr\u00f3prias coordenadas definidas no record da linha 32 facilitam as coisas. A vari\u00e1vel <code>Blank</code> da linha 40 serve para indicar onde est\u00e1 o quadro vazio para servir na movimenta\u00e7\u00e3o.</p> <p>De 42 a 44 os procedimentos utilizados para o jogo.</p>"},{"location":"wba-15/#procedure-setblank","title":"Procedure SetBlank","text":"<p>Apenas ajusta a posi\u00e7\u00e3o do espa\u00e7o em branco.</p>"},{"location":"wba-15/#boardinit","title":"BoardInit","text":"<p>Inicializa o tabuleiro com as pe\u00e7as de 1 a 15 em sequ\u00eancia e tendo o quadro 16 em branco para a movimenta\u00e7\u00e3o. As coordenadas das pe\u00e7as s\u00e3o ajustadas de 0..3 para x e 0..3 para y. </p>"},{"location":"wba-15/#issolvable","title":"IsSolvable","text":"<p>Quando as pe\u00e7as s\u00e3o embaralhadas, \u00e9 necess\u00e1rio saber se o resultado tem solu\u00e7\u00e3o. Voc\u00ea pode ver maiores detalhes sobre a rotina para verificar se existe uma solu\u00e7\u00e3o para o arranjo atual aqui.</p>"},{"location":"wba-15/#shuffle","title":"Shuffle","text":"<p>Bem, uma rotina para embaralhar as pe\u00e7as no tabuleiro. Se a posi\u00e7\u00e3o resultante n\u00e3o tiver solu\u00e7\u00e3o, embaralha novamente at\u00e9 conseguir uma posi\u00e7\u00e3o v\u00e1lida.</p>"},{"location":"wba-15/#canmove","title":"CanMove","text":"<p>Verifica se o movimento escolhido pelo jogador \u00e9 v\u00e1lido, isto \u00e9, se existe uma pe\u00e7a que possa ser movida na dire\u00e7\u00e3o escolhida. Se o local em branco estiver na \u00faltima coluna do tabuleiro, n\u00e3o \u00e9 poss\u00edvel move uma pe\u00e7a da direita para esquerda (pressionamento de seta para esquerda).</p>"},{"location":"wba-15/#domove","title":"DoMove","text":"<p>Executa um movimento v\u00e1lido.</p> <p>Era isso. Nem ficou muito grande com as 141 linhas de c\u00f3digo (contando as linhas em branco).</p>"},{"location":"wba-15/#diferencas","title":"Diferen\u00e7as","text":"<p>As maiores diferen\u00e7as foram as rotinas para desenhar o tabuleiro e para a manipula\u00e7\u00e3o da tecla pressionada. Vou mostrar apenas as rotinas utilizadas para a intera\u00e7\u00e3o com a p\u00e1gina do navegador.</p>"},{"location":"wba-15/#onformkeypress","title":"OnFormKeyPress","text":"<p><pre><code>function TMyApplication.OnFormKeyPress(k: TJSKeyBoardEvent): Boolean;\nVar\nkey : word;\nbegin\nResult:=True;\ncase K.Code of\nTJSKeyNames.ArrowRight : key:=VK_RIGHT;\nTJSKeyNames.ArrowUp    : key:=VK_UP;\nTJSKeyNames.ArrowLeft  : key:=VK_LEFT;\nTJSKeyNames.ArrowDown  : key:=VK_DOWN;\nend;\nk.preventDefault;\nif DoMove(key) then\nDrawBoard;\nend;\n</code></pre> As linhas de 53 a 58 servem apenas para compatibilizar o c\u00f3digo da tecla pressionada. A vers\u00e3o para desktop cont\u00e9m apenas as linhas 60 e 61.</p>"},{"location":"wba-15/#drawboard","title":"DrawBoard","text":"<p>Respons\u00e1vel pelo desenho do estado atual do tabuleiro na tela. Os comandos necess\u00e1rios para desenhar em um canvas de uma p\u00e1gina e para desenhar em uma janela s\u00e3o totalmente diferentes. At\u00e9 poderia ter feito uma rotina comum. Fica para a pr\u00f3xima.</p> <pre><code>procedure TMyApplication.DrawBoard;\nvar\ni, x, y: Integer;\nbegin\nfor i:=0 to CSIZE do begin\nFCtx.beginPath;\nx:=Board[i].x;\nx:=x*BSIZE+x*GAP+GAP;\ny:=Board[i].y;\ny:=y*BSIZE+y*GAP+GAP;\nFCtx.strokeStyle:='Black';\nif Board[i].n = 0 then begin\nFCtx.fillStyle:=COLORBLANK;\nFCtx.rect(x,y,BSIZE,BSIZE);\nFCtx.fillRect(x,y,BSIZE,BSIZE);\nFCtx.stroke;\nContinue;\nend else begin\nif Board[i].n=i+1 then\nFCtx.fillStyle:=COLOROK\nelse\nFCtx.fillStyle:=COLORWRONG;\nFCtx.rect(x,y,BSIZE,BSIZE);\nFCtx.fillRect(x,y,BSIZE,BSIZE);\nFCtx.fillStyle:='Black';\nFCtx.fillText(Board[i].n.ToString, x + BSIZE div 2, y+BSIZE div 2);\nFCtx.stroke;\nend;\nend; </code></pre> <p>A linha 45 inicia o desenho da pastilha. Se o quadro for vazio, desenha e vai para a pr\u00f3xima coordenada. Se o n\u00famero est\u00e1 na posi\u00e7\u00e3o correta, desenha em verde e se estiver na posi\u00e7\u00e3o errada desenha em vermelho.</p>"},{"location":"wba-15/#integracao-com-a-pagina","title":"Integra\u00e7\u00e3o com a p\u00e1gina","text":"<pre><code>uses\nBrowserApp, JS, Classes, SysUtils, Web,\nfifteenengine;\n</code></pre> <p>No uses apenas foi inclu\u00eddo o <code>fifteenengine</code> para a l\u00f3gica do jogo.</p> <pre><code>procedure TMyApplication.BindElements;\nbegin\nbtNew:=TJSHTMLButtonElement(getHTMLElement('bt_new'));\nbtNew.OnClick := @NewGame;\nFCanvas:=TJSHTMLCanvasElement(document.getElementById('my_canvas'));\nFCanvas.width:=window.innerWidth;\nFCanvas.height:=window.innerHeight;\nFCanvas.width:=BSIZE*4+GAP*5;\nFCanvas.height:=FCanvas.width;\nFCtx:=TJSCanvasRenderingContext2D(FCanvas.getContext('2d'));\nFCtx.font:='bold 40px Arial';\nFCtx.textAlign:= 'center';\ndocument.onkeydown:=@OnFormKeyPress;\nBoardInit;\nDrawBoard;\nend;\n</code></pre> <p>As linhas 28 e 20 associam o bot\u00e3o com a fun\u00e7\u00e3o que dever\u00e1 ser executada por ocasi\u00e3o do pressionamento.</p> <p>As linhas 30 a 37 inicializam o canvas e o contexto para o desenho.</p> <p>A linha 38 o pressionamento de uma tecla com o procedimento <code>OnFormKeyPress</code>.</p> <p>E era isso. Para programas mais complexos, as coisas n\u00e3o ser\u00e3o t\u00e3o simples. Mas fica a d\u00favida da necessidade de uma vers\u00e3o desktop e navegador do mesmo programa.</p> <p>Existe espa\u00e7o para melhorias como:</p> <ul> <li>Mostrar uma mensagem quando o jogador terminar (todas as pe\u00e7as nos   respectivos lugar).</li> <li>Mostrar o n\u00famero de jogadas efetuadas.</li> <li>Ajustar o tamnho do canvas e o desenho do tabuleiro quando a janela   for redimensionada.</li> <li>Anima\u00e7\u00e3o do movimento.</li> <li>Etc..</li> </ul>"},{"location":"wba-anima/","title":"Anima\u00e7\u00e3o","text":"<p>Criei um novo projeto, optei por salvar todos (<code>Ctrl+Shift+S</code>) e escolhi os nomes <code>animation.lpi</code> e <code>animation.html</code>.</p> <p>Vamos ver como conseguir o resultado que segue:</p> <p></p>"},{"location":"wba-anima/#html","title":"HTML","text":"<p>Me baseei no exemplo do W3CSS para o primeiro exemplo. O arquivo <code>animation.html</code> ficou assim:</p> <pre><code>&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\"&gt;\n  &lt;title&gt;Animation&lt;/title&gt;\n  &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n  &lt;link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\"&gt;\n  &lt;script src=\"animation.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;div class=\"w3-container w3-margin w3-center \"&gt;\n    &lt;div class=\"w3-bar\"&gt;\n      &lt;button id=\"id_animate1\" class=\"w3-button w3-black\"&gt;Top&lt;/button&gt;\n      &lt;button id=\"id_animate2\" class=\"w3-button w3-teal\"&gt;Bottom&lt;/button&gt;\n      &lt;button id=\"id_animate3\" class=\"w3-button w3-red\"&gt;Left&lt;/button&gt;\n      &lt;button id=\"id_animate4\" class=\"w3-button w3-yellow\"&gt;Right&lt;/button&gt;\n      &lt;button id=\"id_animate5\" class=\"w3-button w3-orange\"&gt;Fade&lt;/button&gt;\n      &lt;button id=\"id_animate6\" class=\"w3-button w3-brown\"&gt;Zoom&lt;/button&gt;\n      &lt;button id=\"id_animate7\" class=\"w3-button w3-blue\"&gt;Spin&lt;/button&gt;\n      &lt;button id=\"id_animate8\" class=\"w3-button w3-blue-gray\"&gt;Normal&lt;/button&gt;\n    &lt;/div&gt;\n    &lt;p&gt;W3.CSS Animation Classes.&lt;/p&gt;\n    &lt;div id=\"id_anim\"&gt;\n      &lt;h1 id=\"id_text\" &gt;Animation is Fun!&lt;/h1&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n  &lt;script&gt;\nwindow.addEventListener(\"load\", rtl.run);\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Diferen\u00e7as da p\u00e1gina gerada originalmente:</p> <ul> <li>Inclu\u00ed a linha 7 para carregar o framework w3css e utiliz\u00e1-lo na   p\u00e1gina. Outros exemplos ser\u00e3o com bulma, bootstrap, etc. Sem eles \u00e9   necess\u00e1rio um conhecimento e tempo maior para o desenvolvimento de   uma p\u00e1gina apresent\u00e1vel.</li> <li>Na linha 8 tive que atualizar o nome do script gerado pelo Pascal   (continuava como <code>project1.js</code>.</li> <li>Inclu\u00ed as linhas de 11 a 26 para a cria\u00e7\u00e3o da p\u00e1gina com os bot\u1ebds e   textos.</li> <li>Informei o <code>id</code> para todos os elementos que eu queria   interagir. Numerei os bot\u00f5es de 1 a 8 para facilitar a programa\u00e7\u00e3o.</li> </ul> <p>Note que a \u00fanica necessidade foi a inclus\u00e3o dos <code>ids</code>. Nos bot\u00f5es nem \u00e9 necess\u00e1rio indicar um evento <code>on-click</code>.</p>"},{"location":"wba-anima/#programa-em-pascal","title":"Programa em Pascal","text":"<p>Agora a parte que interessa que \u00e9 o que vamos programar.</p> <p>A classe da aplica\u00e7\u00e3o ficou assim (no final coloco o c\u00f3digo completo):</p>"},{"location":"wba-anima/#classe","title":"Classe","text":"<p><pre><code>type\nTMyApplication = class(TBrowserApplication)\nbtAnimation:array[1..8] of TJSHTMLButtonElement;\nclAnim,\nlbText:TJSHTMLElement;\nprocedure BindElements;\nfunction DoAnimation(aEvent: TJSMouseEvent):boolean;\nprotected\nprocedure DoRun; override;\npublic\nend;\n</code></pre> Na linha 10 foi criada uma array com 8 elementos para lidar com os 8 bot\u00f5es da p\u00e1gina (lembre que no html temos apenas os <code>ids</code>). A linha 11 uma vari\u00e1vel para lidar com o elemento respons\u00e1vel para anima\u00e7\u00e3o (class na div) e na linha 12 uma vari\u00e1vel para comunicar com o texto da p\u00e1gina.</p>"},{"location":"wba-anima/#procedure-bindelements","title":"procedure BindElements","text":"<p>A <code>procedure BindElements</code> ser\u00e1 a respons\u00e1vel por fazer a liga\u00e7\u00e3o ente as vari\u00e1veis e os elementos da p\u00e1gina. J\u00e1 <code>function DoAnimation(aEvent: TJSMouseEvent):boolean;</code> ser\u00e1 chamada quando um bot\u00e3o for pressionado.</p> <pre><code>procedure TMyApplication.BindElements;\nvar\ni:integer;\ns:string;\nbegin\nclAnim:=TJSHTMLElement(document.getElementById('id_anim'));\nlbText:=TJSHTMLElement(document.getElementById('id_text'));\nfor i:=1 to 8 do begin\ns:='id_animate'+i.ToString;\nbtAnimation[i]:=TJSHTMLButtonElement(getHTMLElement(s));\nbtAnimation[i].OnClick := @DoAnimation;\nend;\nend; </code></pre> <p>As linhas 25 e 26 ligam as respectivas vari\u00e1veis ao elementos da p\u00e1gina html. A linha 29 relaciona os respectivos bot\u00f5es e a linha 30 adiciona o evento <code>OnClick</code> ao bot\u00e3o correspondente dizendo que, ao ser pressionado dever\u00e1 executar a fun\u00e7\u00e3o <code>DoAnimation</code> que \u00e9 respons\u00e1vel pela respectiva anima\u00e7\u00e3o.</p>"},{"location":"wba-anima/#function-doanimation","title":"function DoAnimation","text":"<p><pre><code>function TMyApplication.DoAnimation(aEvent: TJSMouseEvent):boolean;;\nvar\ns:string;\ni:integer;\ncAnim : Array [1..8] of string = ('w3-animate-top','w3-animate-bottom',\n'w3-animate-left','w3-animate-right','w3-animate-opacity',\n'w3-animate-zoom','w3-spin','');\nbegin\ns:=aEvent.currentTargetElement.Attrs['id'];\ni:=RightStr(s,1).ToInteger;\nif cAnim[i]='' then\nlbText.innerHTML:='Pas2JS'\nelse\nlbText.innerHTML:= cAnim[i];\nclAnim.className:=cAnim[i];\nend; </code></pre> A Array da linha 38 cont\u00e9m o conte\u00fado que dever\u00e1 ser colocado na classe da div respons\u00e1vel pela anima\u00e7\u00e3o para informa o tipo de anima\u00e7\u00e3o que dever\u00e1 ser feita.</p> <p>As linhas 42 e 43 identificam o bot\u00e3o que gerou a chamada (vou verificar se n\u00e3o existe uma forma de passar diretamente o bot\u00e3o para a fun\u00e7\u00e3o especificado na linha 30).</p> <p>As linhas 44 a 47 trocam o texto da linha 24 do html, passando a string correspondente \u00e0 classe ou Pas2JS se for sem anima\u00e7\u00e3o (bot\u00e3o Normal).</p> <p>A linha 48 altera a classe para que ocorra a anima\u00e7\u00e3o selecionada. Eu tamb\u00e9m poderia criar as vari\u00e1veis <code>lbText</code> e <code>clAnim</code> locais e escrever os comandos das linhas 25 e 26 dentro da fun\u00e7\u00e3o.</p>"},{"location":"wba-anima/#procedure-dorun","title":"procedure DoRun","text":"<p>A inicializa\u00e7\u00e3o apenas chama a fun\u00e7\u00e3o para fazer a liga\u00e7\u00e3o dos elementos da p\u00e1gina</p> <pre><code>procedure TMyApplication.DoRun;\nbegin\nBindElements;\nTerminate;\nend;\n</code></pre> <p>Ent\u00e3o, 30 linhas de c\u00f3digo foram suficientes para realiza a nossa tarefa. N\u00e3o vem ao caso se \u00e9 mais ou menos do que seria necess\u00e1rio em JS. Vejo dois pontos interessante:</p> <ul> <li>Considero o Pascal mais leg\u00edvel que o JS. Na realidade, mais limpo   visualmente do que a utiliza\u00e7\u00e3o de chaves.</li> <li>N\u00e3o que n\u00e3o fosse poss\u00edvel fazer em JS mas a p\u00e1gina html tamb\u00e9m   ficou mais limpa sem os onClick.</li> <li>O desenvolvimento \u00e9 relativamente r\u00e1pido e f\u00e1cil. Basta pressionar   F9 para a p\u00e1gina ser carregada e o script ser executado.</li> </ul>"},{"location":"wba-anima/#codigo-final","title":"C\u00f3digo final","text":"<pre><code>program animation;\n\n{$mode objfpc}\n\nuses\nBrowserApp, JS, Classes, SysUtils, Web;\n\ntype\nTMyApplication = class(TBrowserApplication)\nbtAnimation:array[1..8] of TJSHTMLButtonElement;\nclAnim,\nlbText:TJSHTMLElement;\nprocedure BindElements;\nfunction DoAnimation(aEvent: TJSMouseEvent):boolean;\nprotected\nprocedure DoRun; override;\npublic\nend;\n\nprocedure TMyApplication.BindElements;\nvar\ni:integer;\ns:string;\nbegin\nclAnim:=TJSHTMLElement(document.getElementById('id_anim'));\nlbText:=TJSHTMLElement(document.getElementById('id_text'));\nfor i:=1 to 8 do begin\ns:='id_animate'+i.ToString;\nbtAnimation[i]:=TJSHTMLButtonElement(getHTMLElement(s));\nbtAnimation[i].OnClick := @DoAnimation;\nend;\nend;\n\nfunction TMyApplication.DoAnimation(aEvent: TJSMouseEvent):boolean;;\nvar\ns:string;\ni:integer;\ncAnim : Array [1..8] of string = ('w3-animate-top','w3-animate-bottom',\n'w3-animate-left','w3-animate-right','w3-animate-opacity',\n'w3-animate-zoom','w3-spin','');\nbegin\ns:=aEvent.currentTargetElement.Attrs['id'];\ni:=RightStr(s,1).ToInteger;\nif cAnim[i]='' then\nlbText.innerHTML:='Pas2JS'\nelse\nlbText.innerHTML:= cAnim[i];\nclAnim.className:=cAnim[i];\nend;\n\nprocedure TMyApplication.DoRun;\nbegin\nBindElements;\nTerminate;\nend;\n\nvar\nApplication : TMyApplication;\n\nbegin\nApplication := TMyApplication.Create(nil);\nApplication.Initialize;\nApplication.Run;\nend.\n</code></pre>"},{"location":"wba-start/","title":"Web Browser Application","text":"<ol> <li>Escolha a op\u00e7\u00e3o Project/New Project ... </li> </ol> <ol> <li> <p>Selecione Web Browser Application e clique em OK.  </p> </li> <li> <p>Marque as op\u00e7\u00f5es Run RTL when all page resources are fully loaded    e Use Browser Application object.  </p> </li> </ol> <p>Voc\u00ea ter\u00e1 um esqueleto de programa em Pascal (<code>project1.lpr</code>) como este:</p> <pre><code>program Project1;\n\n{$mode objfpc}\n\nuses\nBrowserApp, JS, Classes, SysUtils, Web;\n\ntype\nTMyApplication = class(TBrowserApplication)\nprotected\nprocedure DoRun; override;\npublic\nend;\n\nprocedure TMyApplication.DoRun;\nbegin\n// Your code here\nend;\n\nvar\nApplication : TMyApplication;\n\nbegin\nApplication := TMyApplication.Create(nil);\nApplication.Initialize;\nApplication.Run;\nend.\n</code></pre> <p>Veremos o que fazer com ele na pr\u00f3xima etapa. Tamb\u00e9m ser\u00e1 criado um HTML (<code>project1.html</code>) com o seguinte conte\u00fado.</p> <pre><code>&lt;!doctype html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n  &lt;meta http-equiv=\"Content-type\" content=\"text/html; charset=utf-8\"&gt;\n  &lt;title&gt;Project1&lt;/title&gt;\n  &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n  &lt;script src=\"project1.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;script&gt;\nwindow.addEventListener(\"load\", rtl.run);\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"}]}